# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

# Use config.yml values for some configuration.
require 'yaml'
unless File.exist?("../../setup/ansible/vars.yml")
  raise 'Configuration file not found! Please copy vars.example.yml to vars.yml and try again.'
end
vconfig = YAML.load_file("../../setup/ansible/vars.yml")

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "bento/ubuntu-19.10"
  config.ssh.insert_key = false
  config.vm.provider "virtualbox"

  config.vm.provider :virtualbox do |v|
    v.memory = 1024
    v.cpus = 1
    v.linked_clone = true
    v.customize ['modifyvm', :id, '--audio', 'none']
  end

  # Define four VMs with static private IP addresses.
  boxes = [
    { :name => "pik3s00", :ip => "10.128.88.200" },
    { :name => "pik3s01", :ip => "10.128.88.201" }
  ]

  # Configure each of the VMs.
  boxes.each_with_index do |opts, index|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = opts[:name]
      config.vm.network :private_network, ip: opts[:ip]

      # Provision all the VMs using Ansible after last VM is up.
      if index == boxes.size - 1
        config.vm.provision "ansible" do |ansible|
          ansible.compatibility_mode = "2.0"
          ansible.playbook = "../../setup/ansible/playbook.yml"
          ansible.inventory_path = "inventory"
          ansible.limit = "k3s_cluster"
        end
      end
    end
  end
end
